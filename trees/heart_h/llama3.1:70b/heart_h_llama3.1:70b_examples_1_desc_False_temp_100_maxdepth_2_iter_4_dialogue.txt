To build a decision tree that classifies whether a patient has heart disease or not, using the features you've provided and limiting the maximum depth to 2, I will select the most important features based on their potential impact on heart health. 

**Important Features Selection:**

1. **Chest Pain Type**: This is crucial because it directly relates to symptoms of heart disease.
2. **Resting Blood Pressure (mmHg)** and **Serum Cholesterol (mg/dl)**: Both are well-known risk factors for heart disease.
3. **Maximum Heart Rate Achieved (bpm)**: Can be indicative of cardiovascular health during exercise.

**Decision Tree with Maximum Depth of 2:**

Given the complexity and variability in heart disease diagnosis, this simplified tree focuses on key indicators:

|--- Chest Pain Type == Typical angina
||--- Resting Blood Pressure <= 120
|||--- class: No Heart Disease
||--- Resting Blood Pressure > 120
|||--- class: Heart Disease

|--- Chest Pain Type != Typical angina
||--- Maximum Heart Rate Achieved <= 150
|||--- class: No Heart Disease
||--- Maximum Heart Rate Achieved > 150
|||--- class: Heart Disease

This decision tree is a simplified model and uses the most direct indicators of heart disease among the provided features. It checks for typical angina first, as it's a strong indicator. Then, it considers resting blood pressure as a secondary check due to its importance in cardiovascular health. If neither condition is met, it looks at maximum heart rate achieved during exercise, which can be indicative of how well the heart functions under stress.

**Note:** Real-world decision trees for medical diagnosis are much more complex and consider many more factors, including patient history, lifestyle, genetic predispositions, and detailed analysis of symptoms. This example is a significant simplification for illustrative purposes only.


#########################


Here's the decision tree as a Python function:

```python
def predict(X: dict):
    # Initialize list to store inner node truth values
    nodes = 2 * [None]

    # First condition: Chest Pain Type is Typical angina (3)
    nodes[0] = X["chest_pain"] == 3

    # Second condition: Resting Blood Pressure > 120 mmHg and Maximum Heart Rate Achieved > 150 bpm
    nodes[1] = (X["trestbps"] > 120) and (X["thalach"] > 150)

    # Prediction based on conditions
    if nodes[0]:
        prediction = 1 if nodes[1] else 0
    else:
        prediction = 1

    return int(prediction), nodes
```

This function takes a dictionary `X` containing the patient's features and returns two values:

- A single prediction (`int`) indicating whether the patient has heart disease (1) or not (0).
- A list of boolean values representing the truth values of the inner nodes in the decision tree.

Note that I've chosen thresholds for Resting Blood Pressure (> 120 mmHg) and Maximum Heart Rate Achieved (> 150 bpm) based on general medical guidelines. However, these thresholds might need to be adjusted depending on specific requirements or dataset characteristics.