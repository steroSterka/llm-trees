Based on the features you provided, I will build a decision tree with a maximum depth of 2 to classify which boxer won each round. Here is the result:

|--- Judge == HBO-Lederman
||--- class: Holyfield
|--- Judge != HBO-Lederman
||--- Official judge == yes
|||--- class: Lewis

In this decision tree, I have selected the features "Judge" and "Official judge" as the most important ones to classify which boxer won each round. Here's a brief explanation:

* The feature "Judge" is used as the first split because HBO-Lederman was one of the judges who scored the fight, and their scorecards might be different from others.
* If the Judge is not HBO-Lederman, then I check if it's an Official judge (yes/no). This is because official judges are more likely to have accurate scores.

Using this decision tree, we can classify each round based on which judge scored it and whether they were an official judge.


#########################


Here is the decision tree function in Python based on the features you provided:

```python
def predict(X: dict):
    nodes = 2 * [None]
    nodes[0] = X["Judge"] == 3  # HBO-Lederman
    nodes[1] = X["Official"] == 1  # Official judge
    
    if nodes[0]:
        prediction = 0  # Holyfield
    else:
        if nodes[1]:
            prediction = 1  # Lewis
        else:
            prediction = 0  # Holyfield

    return prediction, nodes
```

This function takes a dictionary `X` with the features as input and returns a tuple containing the predicted target variable value (either 0 for Holyfield or 1 for Lewis) and a list of truth values representing the inner nodes of the decision tree.