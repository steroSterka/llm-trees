Based on the provided features, I will build a decision tree classifier to predict party affiliation (Democrat or Republican). 

To determine the most important features, I'll use a simple approach by selecting the top 5 features that are likely to be most relevant for this task. These features are:

1. Vote on aid to Nicaraguan contras (yes / no)
2. Vote on MX missile (yes / no)
3. Vote on crime (yes / no)
4. Vote on education spending (yes / no)
5. Vote on superfund right to sue (yes / no)

Now, here's the decision tree:

|--- Vote on aid to Nicaraguan contras == yes
||--- class: Republican
|--- Vote on aid to Nicaraguan contras == no
||--- Vote on MX missile == yes
|||--- class: Republican
||--- Vote on MX missile == no
|||--- Vote on crime == yes
||||--- class: Republican
||||--- Vote on crime == no
|||||--- Vote on education spending == yes
||||||--- class: Democrat
||||||--- Vote on education spending == no
|||||||--- Vote on superfund right to sue == yes
||||||||--- class: Democrat
||||||||--- Vote on superfund right to sue == no
|||||||||--- class: Republican

This decision tree uses a combination of votes on key issues to classify party affiliation. Please note that this is a simplified example and actual decision trees can be more complex, depending on the specific requirements and data distribution.

Here's how it works:

* If a politician voted in favor of aid to Nicaraguan contras, they are classified as Republican.
* If not, and they voted in favor of the MX missile, they are also classified as Republican.
* If neither condition is met, but they voted in favor of tougher crime laws, they are again classified as Republican.
* Otherwise, if they voted in favor of increased education spending, they are likely a Democrat.
* Finally, if none of these conditions apply, and they voted against the superfund right to sue, they are more likely to be a Democrat.

Keep in mind that this is just one possible decision tree based on the provided features. There may be other valid trees depending on the specific characteristics of your data.


#########################


Here is the Python function that implements the decision tree:

```python
def predict(X: dict):
    nodes = 5 * [None]
    nodes[0] = X["aid-to-nicaraguan-contras"] == 2
    nodes[1] = X["mx-missile"] == 2
    nodes[2] = X["crime"] == 2
    nodes[3] = X["education-spending"] == 2
    nodes[4] = X["superfund-right-to-sue"] == 2

    if nodes[0]:
        prediction = 1
    else:
        if nodes[1]:
            prediction = 1
        else:
            if nodes[2]:
                prediction = 1
            else:
                if nodes[3]:
                    prediction = 0
                else:
                    if nodes[4]:
                        prediction = 0
                    else:
                        prediction = 1

    # Convert boolean values to integers (1 or 0)
    nodes = [int(node) for node in nodes]

    return prediction, nodes
```

This function takes a dictionary `X` as input, where each key corresponds to a feature and the value is the feature's value. The function implements the decision tree logic using nested if-else statements. The nodes are evaluated based on the feature values, and the final prediction is returned along with the node values.

Note that I've assumed that the target variable `target` has been replaced by `prediction`, which takes a value of 1 for republican and 0 for democrat. Also, I've converted the boolean values in the nodes list to integers (1 or 0) before returning it.